import Head from 'next/head'
import Link from 'next/link'
import { useRouter } from 'next/dist/client/router'
import React, { useEffect, useState } from 'react'
import styled from 'styled-components'
import _, { isString } from 'lodash'

import { Nav } from '../components/Nav'
import { Searchbar } from '../components/Searchbar'
import { RecipeList } from '../components/RecipeList'
import { TagFilters } from '../components/TagFilters'
import { CalorieSlider } from '../components/CalorieSlider'

import { Recipe } from '../server/interfaces'
import { useGetRecipes } from '../hooks/useGetRecipes'
import { SecondaryButton } from '../components/SecondaryButton'
import { RecipeSubmitModal } from '../components/RecipeSubmitModal'
import { Modal } from '../components/Modal'
import { OldDropdown } from '../components/Dropdown'
import { useSession } from 'next-auth/client'

export default function Home() {
	const router = useRouter()
	///
	const [session, loading] = useSession()
	///
	const [recipeArray, setRecipeArray] = useState<Recipe[]>([])
	const { getRecipes } = useGetRecipes()

	useEffect(() => {
		if (router.isReady)
			getRecipes(router.query).then(recipes => setRecipeArray(recipes))
	}, [router.query])

	// useEffect(() => {
	// 	if (router.isReady && session)
	// 		getRecipes(router.query).then(recipes => setRecipeArray(recipes))
	// }, [router.query])

	return (
		<>
			<Head>
				<title>Recipes</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<Main>
				<Nav>
					{router.isReady && <Searchbar />}

					{router.isReady && <OldDropdown />}

					<Modal buttonText='New Recipe'>
						<RecipeSubmitModal />
					</Modal>
					{/* <Link href={`/newrecipe`}>
						<a>
							<SecondaryButton>New Recipe</SecondaryButton>
						</a>
					</Link> */}
				</Nav>
				<StyledFlexRow>
					<StyledFlexColumn>
						<TagFilters />
						<CalorieSlider rangeMin={0} rangeMax={800} />
					</StyledFlexColumn>
					{recipeArray && <RecipeList recipesToRender={recipeArray} />}
				</StyledFlexRow>
			</Main>
		</>
	)
}

const Main = styled.main`
	position: relative;
	min-height: 100vh;
	display: flex;
	flex-direction: column;
	//align-items: center;
	background-color: ${p => p.theme.color.gamma};
`

const StyledFlexRow = styled.div`
	display: flex;
	flex: 1;
`

const StyledFlexColumn = styled.div`
	width: 13vw;
	display: flex;
	flex-direction: column;
	background-color: ${p => p.theme.color.white};
	padding: 0.5rem;
`
